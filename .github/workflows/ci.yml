name: ci

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]

      fail-fast:
        ${{ github.event_name == 'pull_request' || (github.ref !=
        'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')) }}

    env:
      CARGO_TERM_COLOR: always
      RUST_BACKTRACE: full
      RUSTC_FORCE_INCREMENTAL: 1

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install Deno
        uses: denoland/setup-deno@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install rust
        uses: hecrj/setup-rust-action@v1

      - name: Install clippy and rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Log versions
        run: |
          rustc --version
          cargo --version
          deno --version

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |-
            target/*/.*
            target/*/build
            target/*/deps
          key:
            ${{ matrix.config.os }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.config.os }}-

      - name: Run fmt
        run: |
          cargo fmt --all -- --check
          deno fmt --check

      - name: Run cargo check
        run: cargo check --locked

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

      - name: Run deno lint
        run: deno lint

      - name: Run cargo test
        run: cargo test --locked

      - name: Build & Test
        run: |
          cargo build --locked
          deno test --allow-ffi --allow-read --unstable
